{"version":3,"sources":["Components/TodoApp/TodoApp.js","Components/TodoItem/TodoItem.js","Components/TodoList/TodoList.js","Components/TodosFilter/TodosFilter.js","App.js","index.js"],"names":["TodoApp","state","inputData","handleChange","event","setState","target","value","trimLeft","clearField","this","handleSubmit","props","className","onSubmit","e","preventDefault","taskObj","id","Date","title","completed","length","placeholder","onChange","React","Component","TodoItem","todo","allTasksSelected","handleTaskRemover","cn","type","checked","htmlFor","onClick","TodoList","handleTogglerAll","prev","todosList","map","key","TodosFilter","href","todos","App","newTask","taskId","filter","task","ReactDOM","render","document","getElementById"],"mappings":"oTAyDeA,E,4MArDbC,MAAQ,CACNC,UAAW,I,EAGbC,aAAe,SAACC,GACd,EAAKC,SAAS,CACZH,UAAWE,EAAME,OAAOC,MAAMC,c,EAIlCC,WAAa,WACX,EAAKJ,SAAS,CAAEH,UAAW,M,uDAGnB,IAAD,OACCA,EAAcQ,KAAKT,MAAnBC,UACAS,EAAiBD,KAAKE,MAAtBD,aAER,OACE,4BAAQE,UAAU,UAChB,qCACA,0BAAMC,SAAU,SAACC,GACfA,EAAEC,iBACF,IAAMC,EAAU,CACdC,IAAK,IAAIC,KACTC,MAAOlB,EACPmB,WAAW,GAGY,IAArBnB,EAAUoB,SAIdX,EAAaM,GACb,EAAKR,gBAGL,2BACEI,UAAU,WACVU,YAAY,yBACZhB,MAAOL,EACPsB,SAAUd,KAAKP,qB,GA1CLsB,IAAMC,W,wBCiCbC,EAhCE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,iBAAkBC,EAA3B,EAA2BA,kBAA3B,OACf,wBAAIjB,UAAWkB,IAAG,CAChBV,UAAWQ,KAGX,yBAAKhB,UAAU,QACb,2BACEmB,KAAK,WACLnB,UAAU,SACVK,GAAG,SACHe,QAASJ,IAEX,2BAAOK,QAAQ,UAAUN,EAAKR,OAC9B,4BACEY,KAAK,SACLnB,UAAU,UACVsB,QAAS,kBAAML,EAAkBF,EAAKV,QAG1C,2BAAOc,KAAK,OAAOnB,UAAU,WCkDlBuB,E,4MAnEfnC,MAAQ,CACN4B,kBAAkB,G,EAGpBQ,iBAAmB,WACjB,EAAKhC,UAAS,SAAAiC,GAAI,MAAK,CACrBT,kBAAmBS,EAAKT,sB,uDAIlB,IAAD,SACkCnB,KAAKE,MAAtC2B,EADD,EACCA,UAAWT,EADZ,EACYA,kBACXD,EAAqBnB,KAAKT,MAA1B4B,iBAER,OACE,6BAAShB,UAAU,QACjB,2BACEmB,KAAK,WACLd,GAAG,aACHL,UAAU,aACVsB,QAAS,kBAAM,EAAKE,sBAEtB,2BAAOH,QAAQ,cAAf,wBAEA,wBAAIrB,UAAU,aACX0B,EAAUC,KAAI,SAAAZ,GAAI,OACjB,kBAAC,EAAD,CACEA,KAAMA,EACNa,IAAKb,EAAKV,GACVW,iBAAkBA,EAClBC,kBAAmBA,a,GA/BRL,IAAMC,WCuBdgB,EA1BK,kBAClB,4BAAQ7B,UAAU,UAChB,0BAAMA,UAAU,cAAhB,gBAIA,wBAAIA,UAAU,WACZ,4BACE,uBAAG8B,KAAK,KAAK9B,UAAU,YAAvB,QAGF,4BACE,uBAAG8B,KAAK,YAAR,WAGF,4BACE,uBAAGA,KAAK,eAAR,eAIJ,4BAAQX,KAAK,SAASnB,UAAU,mBAAhC,qBCjBE+B,EAAQ,CACZ,CACExB,MAAO,cACPF,GAAI,EACJG,WAAW,GAEb,CACED,MAAO,gBACPF,GAAI,EACJG,WAAW,IAmCAwB,E,4MA9Bb5C,MAAQ,CACN2C,MAAM,GAAD,OAAMA,I,EAGbjC,aAAe,SAACmC,GACd,EAAKzC,UAAS,SAAAiC,GAAI,MAAK,CACrBM,MAAM,GAAD,mBAAMN,EAAKM,OAAX,CAAkBE,S,EAI3BhB,kBAAoB,SAACiB,GACnB,EAAK1C,UAAS,SAAAiC,GAAI,MAAK,CACrBM,MAAO,YAAIN,EAAKM,OAAOI,QAAO,SAAAC,GAAI,OAAIF,IAAWE,EAAK/B,W,uDAKxD,OACE,6BAASL,UAAU,WACjB,kBAAC,EAAD,CAASF,aAAcD,KAAKC,eAC5B,kBAAC,EAAD,CACE4B,UAAW7B,KAAKT,MAAM2C,MACtBd,kBAAmBpB,KAAKoB,oBAE1B,kBAAC,EAAD,W,GAzBUL,IAAMC,WCZxBwB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.56975d9b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoApp extends React.Component {\n  state = {\n    inputData: '',\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      inputData: event.target.value.trimLeft(),\n    });\n  }\n\n  clearField = () => {\n    this.setState({ inputData: '' });\n  };\n\n  render() {\n    const { inputData } = this.state;\n    const { handleSubmit } = this.props;\n\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form onSubmit={(e) => {\n          e.preventDefault();\n          const taskObj = {\n            id: +new Date(),\n            title: inputData,\n            completed: false,\n          };\n\n          if (inputData.length === 0) {\n            return;\n          }\n\n          handleSubmit(taskObj);\n          this.clearField();\n        }}\n        >\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={inputData}\n            onChange={this.handleChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nTodoApp.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default TodoApp;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nconst TodoItem = ({ todo, allTasksSelected, handleTaskRemover }) => (\n  <li className={cn({\n    completed: allTasksSelected,\n  })}\n  >\n    <div className=\"view\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        id=\"todo-1\"\n        checked={allTasksSelected}\n      />\n      <label htmlFor=\"todo-1\">{todo.title}</label>\n      <button\n        type=\"button\"\n        className=\"destroy\"\n        onClick={() => handleTaskRemover(todo.id)}\n      />\n    </div>\n    <input type=\"text\" className=\"edit\" />\n  </li>\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n  }).isRequired,\n  allTasksSelected: PropTypes.bool.isRequired,\n  handleTaskRemover: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\nimport TodoItem from '../TodoItem/TodoItem';\n\nclass TodoList extends React.Component {\nstate = {\n  allTasksSelected: false,\n}\n\nhandleTogglerAll = () => {\n  this.setState(prev => ({\n    allTasksSelected: !prev.allTasksSelected,\n  }));\n}\n\nrender() {\n  const { todosList, handleTaskRemover } = this.props;\n  const { allTasksSelected } = this.state;\n\n  return (\n    <section className=\"main\">\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        onClick={() => this.handleTogglerAll()}\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n      <ul className=\"todo-list\">\n        {todosList.map(todo => (\n          <TodoItem\n            todo={todo}\n            key={todo.id}\n            allTasksSelected={allTasksSelected}\n            handleTaskRemover={handleTaskRemover}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n}\n}\n/* <li className=\"completed\">\n        <div className=\"view\">\n          <input type=\"checkbox\" className=\"toggle\" id=\"todo-2\" />\n          <label htmlFor=\"todo-2\">qwertyuio</label>\n          <button type=\"button\" className=\"destroy\" />\n        </div>\n        <input type=\"text\" className=\"edit\" />\n      </li>\n\n      <li className=\"editing\">\n        <div className=\"view\">\n          <input type=\"checkbox\" className=\"toggle\" id=\"todo-3\" />\n          <label htmlFor=\"todo-3\">zxcvbnm</label>\n          <button type=\"button\" className=\"destroy\" />\n        </div>\n        <input type=\"text\" className=\"edit\" />\n      </li> */\n\nTodoList.propTypes = {\n  todosList: PropTypes.arrayOf({\n    todo: PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }),\n  }).isRequired,\n  handleTaskRemover: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\n\nconst TodosFilter = () => (\n  <footer className=\"footer\">\n    <span className=\"todo-count\">\n      3 items left\n    </span>\n\n    <ul className=\"filters\">\n      <li>\n        <a href=\"#/\" className=\"selected\">All</a>\n      </li>\n\n      <li>\n        <a href=\"#/active\">Active</a>\n      </li>\n\n      <li>\n        <a href=\"#/completed\">Completed</a>\n      </li>\n    </ul>\n\n    <button type=\"button\" className=\"clear-completed\">\n      Clear completed\n    </button>\n  </footer>\n);\n\nexport default TodosFilter;\n","import React from 'react';\nimport TodoApp from './Components/TodoApp/TodoApp';\nimport TodoList from './Components/TodoList/TodoList';\nimport TodosFilter from './Components/TodosFilter/TodosFilter';\n\nconst todos = [\n  {\n    title: 'Clean a car',\n    id: 1,\n    completed: false,\n  },\n  {\n    title: 'Go to the gym',\n    id: 2,\n    completed: false,\n  },\n];\n\nclass App extends React.Component {\n  state = {\n    todos: [...todos],\n  }\n\n  handleSubmit = (newTask) => {\n    this.setState(prev => ({\n      todos: [...prev.todos, newTask],\n    }));\n  }\n\n  handleTaskRemover = (taskId) => {\n    this.setState(prev => ({\n      todos: [...prev.todos].filter(task => taskId !== task.id),\n    }));\n  }\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <TodoApp handleSubmit={this.handleSubmit} />\n        <TodoList\n          todosList={this.state.todos}\n          handleTaskRemover={this.handleTaskRemover}\n        />\n        <TodosFilter />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}